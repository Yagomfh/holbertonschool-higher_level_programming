>>> matrix_div = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_div(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix_div(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_div(matrix, 'a')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_div("12345", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_div([[]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_div([[1,2,3], [1,2,'a']], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_div([[1, 2, 3], [1, 2]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_div([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_div([[None]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
